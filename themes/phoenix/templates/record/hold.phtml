<?
    // Set page title.
    $this->headTitle($this->translate('request_place_text') . ': ' . $this->driver->getBreadcrumb());

    // Set up breadcrumbs:
    $this->layout()->breadcrumbs = '<li>' . $this->searchMemory()->getLastSearchLink($this->transEsc('Search'), '', '</li> ')
        . '<li>' . $this->recordLink()->getBreadcrumb($this->driver) . '</li> '
        . '<li class="active">' . $this->transEsc('request_place_text') . '</li>';

    $isHold = $this->gatheredDetails['holdtype'] == 'hold';
?>
<h2>
  <? if ($isHold):?>
    <?=$this->transEsc('hold_place_text')?>
  <? else: ?>
    <?=$this->transEsc('request_place_text')?>
  <? endif; ?>
</h2>
<? if ($this->helpText): ?>
<p class="helptext"><?=$this->helpText?></p>
<? endif; ?>

<div class="hold-form">
  <? if ($isHold):?>
    <ul>
      <li>Placing a hold request on an item will cause the item to be held for pickup for you as soon as it is available.</li>
      <li><strong>In Transit</strong> items will typically be available within <strong>2-3 days</strong>.</li>
      <li><strong>In Process</strong> items will typically be available within <strong>7-10 days</strong>.</li>
      <li><strong>On Order</strong> items will typically be available for pickup within <strong>30-60 days</strong>, though some may take longer. <br/>Items ordered from outside North America and Europe may take as long as three to six months to arrive.</li>
      <li>Multiple requests for the same item are fulfilled in the order in which they are received.</li>
      <li>You will receive an email notice when the item is available for pickup.</li>
    </ul>
  <? else: ?>
    <ul>
      <li>Recalling a <strong>loaned</strong> item from another user will cause the item to be due <strong>7 days after the date it is recalled</strong>.</li>
      <li>Recalling an item that is <strong>on hold</strong> or <strong>in transit for hold</strong> will cause the item to be due <strong>7 days after the date the prior user borrows the item</strong>.</li>
      <li>Multiple requests for the same item are fulfilled in the order in which they are received.</li>
      <li>You will receive an email notice when the item is available for pickup.</li>
    </ul>
  <? endif; ?>
    <div class="alert alert-info">
    <p>Requests can take sixty seconds to process. Please be patient when
    submitting this form.</p>
    </div>
  <form class="form-horizontal" method="post" name="placeHold">
    <?=$this->flashmessages()?>
    <label class="col-sm-3 control-label"><?=$this->transEsc('Title')?></label>
    <div class="col-sm-9">
      <p class="form-control-static"><?=$this->driver->getBreadcrumb() ?></p>
    </div>
    <? if (in_array("comments", $this->extraHoldFields)): ?>
      <div class="form-group hold-comment">
        <label class="col-sm-3 control-label"><?=$this->transEsc("Comments")?>:</label>
        <div class="col-sm-9">
          <textarea rows="3" cols="20" name="gatheredDetails[comment]" class="form-control"><?=isset($this->gatheredDetails['comment']) ? $this->escapeHtml($this->gatheredDetails['comment']) : ''?></textarea>
        </div>
      </div>
    <? endif; ?>

    <? if (in_array("requiredByDate", $this->extraHoldFields)): ?>
      <div class="form-group hold-required-by">
        <label class="col-sm-3 control-label"><?=$this->transEsc("hold_required_by")?>:</label>
        <div class="col-sm-9">
          <input id="requiredByDate" type="text" name="gatheredDetails[requiredBy]" value="<?=(isset($this->gatheredDetails['requiredBy']) && !empty($this->gatheredDetails['requiredBy'])) ? $this->escapeHtmlAttr($this->gatheredDetails['requiredBy']) : $this->escapeHtmlAttr($this->defaultRequiredDate)?>" size="8" class="form-control"/>
          (<?=$this->dateTime()->getDisplayDateFormat()?>)
        </div>
      </div>
    <? endif; ?>

    <? if ($this->requestGroupNeeded): ?>
      <div class="form-group hold-request-group">
        <?
          if (isset($this->gatheredDetails['requestGroupId']) && $this->gatheredDetails['requestGroupId'] !== "") {
              $selected = $this->gatheredDetails['requestGroupId'];
          } else {
              $selected = $this->defaultRequestGroup;
          }
       ?>
        <label class="col-sm-3 control-label"><?=$this->transEsc("hold_request_group")?>:</label>
        <div class="col-sm-9">
          <select id="requestGroupId" name="gatheredDetails[requestGroupId]" class="form-control">
          <? if ($selected === false): ?>
            <option value="" selected="selected">
              <?=$this->transEsc('select_request_group')?>
            </option>
          <? endif; ?>
          <? foreach ($this->requestGroups as $group): ?>
            <option value="<?=$this->escapeHtmlAttr($group['id'])?>"<?=($selected == $group['id']) ? ' selected="selected"' : ''?>>
              <?=$this->transEsc('request_group_' . $group['name'], null, $group['name'])?>
            </option>
          <? endforeach; ?>
          </select>
        </div>
      </div>
    <? endif; ?>

    <? if (in_array("pickUpLocation", $this->extraHoldFields)): ?>
      <?
        if (isset($this->gatheredDetails['pickUpLocation']) && $this->gatheredDetails['pickUpLocation'] !== "") {
            $selected = $this->gatheredDetails['pickUpLocation'];
        } elseif (isset($this->homeLibrary) && $this->homeLibrary !== "") {
            $selected = $this->homeLibrary;
        } else {
            $selected = $this->defaultPickup;
        }
      ?>
      <? if ($this->requestGroupNeeded): ?>
        <div class="form-group hold-pickup-location">
          <label id="pickUpLocationLabel" class="col-sm-3 control-label"><i></i> <?=$this->transEsc("pick_up_location")?>:
            <? if (in_array("requestGroup", $this->extraHoldFields)): ?>
              <noscript> (<?=$this->transEsc("Please enable JavaScript.")?>)</noscript>
            <? endif; ?>
          </label>
          <div class="col-sm-9">
            <select id="pickUpLocation" name="gatheredDetails[pickUpLocation]" data-default="<?=$this->escapeHtmlAttr($selected)?>" class="form-control">
              <? if ($selected === false): ?>
              <option value="" selected="selected">
                <?=$this->transEsc('select_pickup_location')?>
              </option>
              <? endif; ?>
            </select>
          </div>
        </div>
      <? elseif ($this->pickup): ?>
        <div class="form-group hold-pickup-location">
          <label class="col-sm-3 control-label"><?=$this->transEsc("pick_up_location")?>:</label>
          <div class="col-sm-9">
            <select id="pickUpLocation" name="gatheredDetails[pickUpLocation]" class="form-control">
            <? if ($selected === false && count($this->pickup) > 1): ?>
              <option value="" selected="selected">
                <?=$this->transEsc('select_pickup_location')?>
              </option>
            <? endif; ?>
            <? foreach ($this->pickup as $lib): ?>
              <option value="<?=$this->escapeHtmlAttr($lib['locationID'])?>"<?=($selected == $lib['locationID']) ? ' selected="selected"' : ''?>>
                <?=$this->transEsc('location_' . $lib['locationDisplay'], null, $lib['locationDisplay'])?>
              </option>
            <? endforeach; ?>
            </select>
          </div>
        </div>
      <? else: ?>
        <input type="hidden" name="gatheredDetails[pickUpLocation]" value="<?=$this->escapeHtmlAttr($this->defaultPickup)?>" />
      <? endif; ?>
    <? endif; ?>
    <div class="form-group">
      <div class="col-sm-9 col-sm-offset-3">
        <input class="btn btn-primary" type="submit" name="placeHold" value="<?=$this->transEsc('request_submit_text')?>"/>
      </div>
    </div>
  </form>
</div>

<?
    // Set up hold script; we do this inline instead of in the header for lightbox compatibility:
    $this->inlineScript()->appendFile('hold.js');

    $js = <<<JS
        if ($.isReady) {
            setUpHoldRequestForm("{$this->escapeHtml($this->driver->getUniqueId())}");
        } else {
            $(document).ready(function(){
                setUpHoldRequestForm("{$this->escapeHtml($this->driver->getUniqueId())}");
            });
        }
JS;

    echo $this->inlineScript()->appendScript($js);
?>
