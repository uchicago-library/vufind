import org.marc4j.marc.Record;

// Give ourselves the ability to import other BeanShell scripts
addClassPath("../import");
importCommands("index_scripts");

// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

/**
 * Extract titles from a record and return them in a normalized format
 * @param record
 * @param fieldSpec
 * @return Set of normalized titles
 */
public Set getTitleBrowseKeys(Record record, String fieldSpec) {
    // Initialize return value:
    Set result = new LinkedHashSet();

    // Loop through relevant fields and normalize everything:
    Set titles = indexer.getFieldList(record, fieldSpec);
    Iterator titleIter = titles.iterator();
    if (titles != null) {
        String current;
        while(titleIter.hasNext()) {
            // current = getNormalizedTITLE(titleIter.next());
	    current = titleIter.next();
            if (current != null && current != false && current.length() > 0) {
                result.add(current);
            }
        }
    }

    // Send back results:
    return result;
}

/**
 * Extract titles from a record and return them in a normalized format
 * @param record
 * @return Set of normalized titles
 */
public Set getTitleBrowseKeys(Record record) {
    // Send in a default fieldSpec if none was provided by the user:
    return getTitleBrowseKeys(record, "245");
}

